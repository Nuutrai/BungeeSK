plugins {
    id "java"
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    compileOnly("net.md-5:bungeecord-api:1.20-R0.1-SNAPSHOT")
    compileOnly("org.jetbrains:annotations:22.0.0")
    compileOnly("com.github.SkriptLang:Skript:2.9.2") {
        exclude group: "com.sk89q.worldguard", module: "worldguard-legacy"
        exclude group: "net.milkbowl.vault", module: "Vault"
    }
    implementation("commons-io:commons-io:2.11.0")
    implementation("com.github.rockaport:alice:0.9.0")
    implementation("com.github.Carleslc.Simple-YAML:Simple-Yaml:1.8.4")
    implementation("io.methvin:directory-watcher:0.15.1")
    implementation("org.xerial:sqlite-jdbc:3.46.1.3")
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}

def oldestJava = 17
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["-source", "" + oldestJava, "-target", "" + oldestJava]
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

jar {
    archiveBaseName.set("${rootProject.name}")
    archiveVersion.set(version.toString())
    archiveClassifier.set("")
    destinationDirectory.set(file("${rootProject.buildDir}/libs/Bung"))
}